###### Building your own IoT Gateway on Ubuntu: #######
Pre-Requisites: IoT gateway requires a kernel version 4.4+
Step 1: Check your kernel version via the following command:
root@secure-edge-gateway:~# uname -r
5.4.0-153-generic

Step 2: Installing bluez
root@secure-edge-gateway:~# snap install bluez
bluez 5.48-4 from Canonicalâœ“ installed

Step 3: Check bluez installed version
root@secure-edge-gateway:~# sudo dpkg --status bluez | grep '^Version:'
Version: 5.48-4

Step 4: Installing radvd (Router Advertisement Daemon)
root@secure-edge-gateway:~# sudo apt-get install radvd
# (use the text editor of your choice to create the following config file)
root@linaro-developer:~# cat /etc/radvd.conf
interface bt0
{
    IgnoreIfMissing on;
    AdvSendAdvert on;
    MinRtrAdvInterval 300;
    MaxRtrAdvInterval 600;
    AdvDefaultLifetime 7200;
    prefix fc00::/64
    {
        AdvOnLink off;
        AdvValidLifetime 36000;
        AdvPreferredLifetime 36000;
        AdvAutonomous on;
        AdvRouterAddr on;
    };
};

Step 5: Installing ndppd
root@secure-edge-gateway:~# sudo apt-get install ndppd

Step 6: Configuring ndppd
# (use the text editor of your choice to create the following config file)
root@linaro-developer:~# cat /etc/ndppd.conf
route-ttl 30000
proxy wlan0 {
    router yes
    timeout 500
    ttl 30000
    rule fc00:0:0:0:d4e7::/80 {
        static
    }
}

Step 7:  Installing tinyproxy
root@secure-edge-gateway:~# sudo apt-get install tinyproxy

Step 8: Configuring tinyproxy
# (use the text editor of your choice to create the following config file)
root@linaro-developer:~# cat /etc/tinyproxy.conf
User nobody
Group nogroup
Port 8080
Timeout 600
# TODO: Make this return a 30 second JSON wait response
DefaultErrorFile "/usr/share/tinyproxy/default.html"
StatFile "/usr/share/tinyproxy/stats.html"
Logfile "/var/log/tinyproxy/tinyproxy.log"
LogLevel Info
PidFile "/var/run/tinyproxy/tinyproxy.pid"
MaxClients 100
MinSpareServers 10
MaxSpareServers 30
StartServers 20
Allow fc00::/7
Allow fe80::/64
Allow ::1
ViaProxyName "tinyproxy"
ReversePath "/DEFAULT/"   "http://gitci.com:8080/DEFAULT/"
ReverseOnly Yes

Step 9: Set IP address for eth interface
# (use nano or any text editor of your choice to create the following config file)
root@secure-edge-gateway:~# cat /etc/network/interfaces.d/bt0
auto bt0
allow-hotplug bt0
iface bt0 inet6 static
    address fc00:0:0:0:d4e7::1
    netmask 80

Step 10: Setup sysctrl for router services
# (use nano or any text editor of your choice to create the following config file)
root@secure-edge-gateway:~# cat /etc/sysctl.d/gateway.conf
# don't ignore RA on wlan0
net.ipv6.conf.wlan.accept_ra=2
# enable ip forwarding
net.ipv6.conf.all.forwarding=1
# enable IPv6 neighbor proxy, in case the 6lowpan needs to
# share the same host IPv6 subnet
net.ipv6.conf.all.proxy_ndp=1

Step 11: Set Network Manager to ignore the bt0 interface
Create /etc/NetworkManager/conf.d/nm-bt0.conf, and add:
[keyfile]
unmanaged-devices+=interface-name:bt0

Step 12: Reboot
root@secure-edge-gateway:~#  reboot -h now

Step 13: Start the IoT gateway processes
To start the IoT gateway processes do the following:
root@secure-edge-gateway:~# sudo service radvd start
root@secure-edge-gateway:~# sudo service ndppd start

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

####### Following is the step-by-step of building Edge CDN on NGINX Ubuntu Server: ######
Step 1: Installing Nginx on a debian machine
root@texas-edge-cdn:~# sudo apt-get install nginx

Step 2: Choose a folder where you want NGINX Asset folder to be (/var/www/assets/):
        You need to do this for each of the edge locations (Texas, Nigeria, and Poland)
root@texas-edge-cdn:~# nano /etc/nginx/sites-available/texas-edge-cdn
And add the following settings:
server {
  listen 443;
  server_name texas-cdn.secureedgecomputing.com;

  location / {
    expires 90d;
    root /var/www/assets/;
  }
}

Step 3: Restart the NGINX Service
root@texas-edge-cdn:~# sudo service nginx start
